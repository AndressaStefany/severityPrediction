#!/bin/bash
#SBATCH --nodes=1
#SBATCH --gpus-per-node=v100l:1
#SBATCH --cpus-per-task=1 # change this parameter to 2,4,6,... and increase "--num_workers" accordingly to see the effect on performance
#SBATCH --time=00-02:00:00           # duration (JJ-HH:MM:SS)
#SBATCH --output=log-%x-%j.out
#SBATCH --error=log-%x-%j.err
#SBATCH --mail-user=robin.moine456@gmail.com
#SBATCH --mail-type=ALL
#SBATCH --mem=64G # Request 8 GB of RAM

# Capture the start time
start_time=$(date +"%Y-%m-%d %H:%M:%S")

# loading modules
module load StdEnv/2020  gcc/9.3.0  cuda/11.4 arrow python/3.10.2 cudnn
virtualenv $SLURM_TMPDIR/MYENV
source $SLURM_TMPDIR/MYENV/bin/activate

pip install /home/rmoine/docstring_parser-0.15-py3-none-any.whl --no-index
pip install /home/rmoine/shtab-1.6.4-py3-none-any.whl --no-index
pip install /home/rmoine/tyro-0.5.10-py3-none-any.whl --no-index
pip install /home/rmoine/trl-0.7.2-py3-none-any.whl --no-index

pip install bitsandbytes==0.41.1 --no-index 
pip install transformers torch peft accelerate xformers scikit-learn sentencepiece huggingface_hub protobuf tqdm nltk --no-index
pip install datasets --no-index

pip install seaborn --no-index
pip install matplotlib --no-index
pip install pandas --no-index
pip install h5py --no-index
pip install fire --no-index
pip install optuna --no-index

# Execution of the script: replace by python path_to_your_script
# Do not forget to change the pathes to absolute pathes (dont hesitate to use $USER variable)
folder_out=/project/def-aloise/$USER/data/embeddings/
folder_data=/project/def-aloise/$USER/data/
dataset_choice=mozilla_200k
pooling_op=mean
interval_idx=3
n_chunks=10
model_name=meta-llama/Llama-2-13b-chat-hf
limit_tokens=1000
id_pred="_mozilla_200k_1000_meta-llama/Llama-2-13b-chat-hf"
use_cpu=False

python /project/def-aloise/$USER/main.py get_llama2_embeddings --folder_out=$folder_out --folder_data=$folder_data --dataset_choice=$dataset_choice --pooling_op=$pooling_op --interval_idx=$interval_idx --n_chunks=$n_chunks --model_name=$model_name --id_pred=$id_pred --limit_tokens=$limit_tokens --use_cpu=$use_cpu


# Capture the end time
end_time=$(date +"%Y-%m-%d %H:%M:%S")

# Calculate and display the execution time
start_seconds=$(date -d "$start_time" '+%s')
end_seconds=$(date -d "$end_time" '+%s')
execution_time=$((end_seconds - start_seconds))

echo "Execution time: $execution_time seconds"

